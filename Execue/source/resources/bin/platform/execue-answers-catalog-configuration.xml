<?xml version="1.0" encoding="ISO-8859-1" ?>
<execue-configuration>
	<ans-catalog>
		<stat-concept-name>Statistics</stat-concept-name>
		<measure-column-data-type>DECIMAL</measure-column-data-type>
		<frequency-column-data-type>BIGINT</frequency-column-data-type>
		<measure-column-precision>30</measure-column-precision>
		<measure-column-scale>6</measure-column-scale>
		<cube>
			<static-values>
				<stats>SUM,AVG</stats>
				<dimension-column-data-type>VARCHAR</dimension-column-data-type>
				<dimension-column-minimum-precision>5</dimension-column-minimum-precision>
				<stat-column-precision>6</stat-column-precision>
				<frequency-column-prefix>FRQUENCY</frequency-column-prefix>
				<simple-lookup-dimension-prefix>SL</simple-lookup-dimension-prefix>
				<range-lookup-dimension-prefix>RL</range-lookup-dimension-prefix>
				<queryId-column-name>QUERY_ID</queryId-column-name>
				<queryId-column-data-type>INT</queryId-column-data-type>
				<queryId-column-length>10</queryId-column-length>
				<range-lookup-lower-limit-column-name>LOWER_LIMIT</range-lookup-lower-limit-column-name>
				<range-lookup-upper-limit-column-name>UPPER_LIMIT</range-lookup-upper-limit-column-name>
				<description-column-suffix>DESC</description-column-suffix>
				<description-column-data-type>VARCHAR</description-column-data-type>
				<description-column-precision>255</description-column-precision>
				<cube-fact-table-prefix>CUBE</cube-fact-table-prefix>
				<cube-pre-fact-table-suffix>TEMP</cube-pre-fact-table-suffix>
				<past-patterns-to-consider-for-optimal-dset-in-days>60</past-patterns-to-consider-for-optimal-dset-in-days>
				<clean-temporary-resources>true</clean-temporary-resources>
				<thread-pool>
					<data-transfer-queries-execution-thread-pool-size>5</data-transfer-queries-execution-thread-pool-size>
					<thread-wait-time>5000</thread-wait-time>					
				</thread-pool>
			</static-values>	
			<flags>
			</flags>		
		</cube>
		<mart>
			<basic-sampling-algo>
				<error-rate>2.5</error-rate>
				<confidence-level>97</confidence-level>
				<ld-constant-one>307.44</ld-constant-one>
				<ld-constant-two>1428.8</ld-constant-two>
				<is-floor-setting-required>true</is-floor-setting-required>
				<multiplication-factor-for-floor>0.3</multiplication-factor-for-floor>
				<use-function-alone>false</use-function-alone>		
				<default-number-of-slices-factor>0.02</default-number-of-slices-factor>
				<minimum-population-size>100</minimum-population-size>
				<max-sample-percentage-of-population>0.8</max-sample-percentage-of-population>
				<p-low>0.02425</p-low>				
			</basic-sampling-algo>
			<sampling-algo>
				<sub-grouping-validation-rules>
					<min-population-percentage-required>5</min-population-percentage-required>
					<max-coefficient-of-variance-allowed>0.3</max-coefficient-of-variance-allowed>
					<max-coefficient-of-variance-allowed-between-two-groups>0.3</max-coefficient-of-variance-allowed-between-two-groups>
				</sub-grouping-validation-rules>
			</sampling-algo>
			<slicing-algo>
				<slicing-eligibility-criteria>
					<criteria>
						<records>1000</records>
						<percentage>5</percentage>
					</criteria>
					<criteria>
						<records>10000</records>
						<percentage>2</percentage>
					</criteria>
					<criteria>
						<records>100000</records>
						<percentage>1</percentage>
					</criteria>
					<criteria>
						<records>500000</records>
						<percentage>.1</percentage>
					</criteria>
				</slicing-eligibility-criteria>
				<min-slices>1000</min-slices>
				<max-slices>10000</max-slices>
				<avg-slices>500</avg-slices>
			</slicing-algo>
			<batch-count-algo>
				<!-- original size of max query for mysql is minimum (1048574)-->
				<sql-query-max-size>1048000</sql-query-max-size>
				<sql-query-empty-where-condition-size>5000</sql-query-empty-where-condition-size>
				<sql-query-where-condition-record-buffer-length>3</sql-query-where-condition-record-buffer-length>
				<sql-max-allowed-expressions-per-condition>1000</sql-max-allowed-expressions-per-condition>
			</batch-count-algo>
			<static-values>
				<scaling-factor-concept-name>ScalingFactor</scaling-factor-concept-name>
				<!-- dont change the order of the stats as this order is needed in the code to process islands -->
				<stats>STDDEV_POP,AVG,MIN,MAX</stats>
				<population-table-name>POPULATION</population-table-name>
				<population-table-uniqueId-column-name>ID</population-table-uniqueId-column-name>
				<population-table-uniqueId-column-data-type>BIGINT</population-table-uniqueId-column-data-type>
				<population-table-uniqueId-column-length>20</population-table-uniqueId-column-length>
				<population-table-slice-number-column-name>SLICE_NUMBER</population-table-slice-number-column-name>
				<population-table-slice-number-column-data-type>INT</population-table-slice-number-column-data-type>
				<population-table-slice-number-column-length>10</population-table-slice-number-column-length>
				<fractional-temp-table-notation>_FX_TEMP</fractional-temp-table-notation>
				<fractional-temp-table-slice-count-column-name>SLICE_COUNT</fractional-temp-table-slice-count-column-name>
				<fractional-temp-table-slice-count-column-data-type>INT</fractional-temp-table-slice-count-column-data-type>
				<fractional-temp-table-slice-count-column-length>10</fractional-temp-table-slice-count-column-length>
				<fractional-temp-table-uniqueId-column-name>ID</fractional-temp-table-uniqueId-column-name>
				<fractional-temp-table-uniqueId-column-data-type>BIGINT</fractional-temp-table-uniqueId-column-data-type>
				<fractional-temp-table-uniqueId-column-length>20</fractional-temp-table-uniqueId-column-length>
				<fractional-table-notation>_FX</fractional-table-notation>
				<fractional-table-sfactor-column-name>SFACTOR</fractional-table-sfactor-column-name>
				<fractional-table-sfactor-column-data-type>DECIMAL</fractional-table-sfactor-column-data-type>
				<fractional-table-sfactor-column-precision>30</fractional-table-sfactor-column-precision>
				<fractional-table-sfactor-column-scale>6</fractional-table-sfactor-column-scale>
				<fractional-population-temp-table-name>POPULATION_TEMP_FX</fractional-population-temp-table-name>
				<fractional-population-table-name>POPULATION_FX</fractional-population-table-name>
				<past-patterns-to-consider-for-optimal-dset-in-days>60</past-patterns-to-consider-for-optimal-dset-in-days>
				<mart-job-name>OnDemandMartCreationJob</mart-job-name>
				<mart-job-group>AnswersCatalog_Mart_OnDemand</mart-job-group>
				<split-batch-data-transfer-to-avoid-sub-conditions>true</split-batch-data-transfer-to-avoid-sub-conditions>
				<clean-temporary-resources>true</clean-temporary-resources>									
				<thread-pool>
					<warehouse-extraction-thread-pool-size>5</warehouse-extraction-thread-pool-size>
					<batch-data-transfer-thread-pool-size>10</batch-data-transfer-thread-pool-size>
					<fractional-table-population-thread-pool-size>5</fractional-table-population-thread-pool-size>
					<thread-wait-time>30000</thread-wait-time>
					<max-tasks-allowed-per-thread-pool>250</max-tasks-allowed-per-thread-pool>
				</thread-pool>
			</static-values>
			<flags>
				<!-- random number generator either code or db approach -->
				<random-number-assigment-db-approach>true</random-number-assigment-db-approach>
			</flags>			
		</mart>
		<optimaldset-algo>
			<build-query-history-from-qdata>true</build-query-history-from-qdata>
		</optimaldset-algo>
	</ans-catalog>
</execue-configuration>